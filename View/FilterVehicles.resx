<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAHBQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAABLlJREFUeJzt3G2qXEUYBOCzBBFxNdmCCMHsUH+YhWQlAQMuQkfxM8nN
        nZk73XW663mg/mc4t4t6ETwOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg
        rDcixan3m0hx6qU/gEgy9dIfQCSZeukPIJJMvfQHEEmmXvoDiCRTL/0BRJKpl/4AIsnUS38AkWTqpT+A
        SDL10h9AJJl66Q8gkky99AcQSaZe+gOIJFMv/QFEkqmX/gAiydRLfwCRZOqlP4BIMvXSH0AkmXrpDyCS
        TL30BxBJhit9c8mHY/wH+XHWD2K6n47xfz+/XvLtrB/U5vtjTiu/nvWDmOa7Y87fzg+zflCrt8f4j/jL
        JV/P+kEM99Ul74/xfzc/z/pBzZwC3Mr034xTgGuZ/ptyCvAc039jTgGeY/pvzinAU0z/Ek4BPmb6F3EK
        8DHTv4xTgL+Z/qWcApj+xZwCmP7lnAK9TH/+5BToY/rzD6dAH9Of/3EK9DD9+SynwP5Mf57kFNif6c8X
        OQX2ZfpzFafAfkx/ruYU2I/pz02cAvsw/bmLU2B9pj93cwqsz/TnRZwC6zL9eQinwHpMfx7GKbAe05+H
        cgqsw/RnCKfA+Zn+DOMUOD/Tn6GcAudl+jOFU+B8TH+mcQqcj+nPVE6B8zD9iXAK5Jn+xDgF8kx/opwC
        OaY/p+AUmM/05zScAvOZ/pyKU2CeWdP/zawfxB6cAuOZ/pyWU2A8059TcwqMY/qzBKfA45n+LMMp8Him
        P0txCjyO6c+SnAIvZ/qzLKfAy5n+LM0pcD/Tny04BW5n+rMNp8DtTH+24hS4nunPlpwCzzP92ZZT4Hmm
        P1tzCjzN9KeCU+BTpj81nAKfMv2p4hT4l+lPJaeA6U8xp4DpT7nmU8D0h6PzFDD94S+Np4DpD//RdAqY
        /vAZDaeA6Q9PaDgFTH/4gp1PAdMfrrDjKWD6w5V2PAVMf7jBTqeA6Q932OEUMP3hTjucAqY/vMAfs3bG
        fH414N/+atK/3fRnazNOgRGPaEZ5mf5sb8YpsGIBmP7UGP1fBVYsANOfKiNPgdUKwPSnzshTYKUCMP2p
        NeoUWKkATH+qrfKoRhUAVFMAUEwBQDEFAMUUABRTAFBMAUAxBQDFFAAUUwBQTAFAMQUAxRQAFFMAUEwB
        QDEFAMUUABRTAFBMAUAxBQDFFAAUUwBQTAFAMQUAxRQAFFMAUEwBQDEFAMUUABRTAFBMAUAxBQDFFAAU
        UwBQTAFAMQUAxRQAFFMAUEwBQDEFAMUUABRTAFBMAUAxBQDFFAAUUwBQTAFAMQUAxRQAFFMAUEwBQDEF
        AMUUABRTAFBMAUAxBQDFFAAUUwBQTAFAMQUAxRQAFFMAUEwBQDEFAMUUABRTAFBMAUAxBQDFFAAUG/Go
        3l3y9sF5N+jfCtVGPKqVAtXSDzAdqJZ+gOlAtfQDTAeqpR9gOlAt/QDTgWrpB5gOVEs/wHSgWvoBpgPV
        0g8wHaiWfoDpQLX0A0wHqqUfYDpQLf0A04Fq6QeYDlRLP8B0oFr6AaYD1dIPMB2oln6A6UC19ANMB6o9
        +n/euVoAAAAAAAAAAAAAAAAAAAAAAAAAAAB6/A67TZ90sCS6MwAAAABJRU5ErkJggg==
</value>
  </data>
</root>