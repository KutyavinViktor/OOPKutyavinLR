<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripDropDownButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAEKSURBVEhL3ZG9DsFQHMXvczDZvIOtXsHObuhqkViI3Quw
        6CYmNoMYJJ0NBiFFIoIytOuf0+TeXP3yde+iyS+3OcP53Z4y3/dJJ4HAsiwyTVMp6BQCBIZhKAWdEcHV
        vSlBmeB82NFy1KLluEWOPRC5MoHdMWhazwi4RJlALgf4EuT6BI+5kCsTrGddUY658E+QvyXYHq9UnRyC
        U87f4aUApcXhnrI9Jzg/laQKFntXlHM+lSQK5psL5fvbp/JvJLGCQqmSWM5JkiCT84igXGtSrruKLQ0T
        luAdmZxHBG37FFuWBC/j5XKOmX8WAH7rcI6ZMffPgjQwN2bXJgDo/COBTpjneQ2dML0PY3cISreGe8HM
        qgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABFEAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAD/dJREFUeJztnVtvXGcVhht6QJS2gOglpb0DgVr4ByDRKxCHVjIC7KSK
        07pVlaStx3YOM2Znj2s78ewIBSpBb+CiqKJBqBxuKK1oBUJAEnpAiDuqCkGhxyuQWqTWfJ8PiZM44xnP
        XvOsvb/3lR4FEBf2u9azZsaH8WWXKYqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKKVlZCS7aufuBz4zNj6Z
        je5pPD463vhr+M9vhn//N7ansSyGw+TBB5+ZbRfL3Wi1i7dn8+LNwIvhv59ptTuPhv9tNvx7e5YV19O7
        pFQoX5+Y/HiQ/KHRPZOv08ufOpMH5n6zlfxbknfeDTwfjkGn1T7+KXq/FKe54477bgqP9CdHxyffoRdf
        NJYbhx787cDyb/5s4YVwEPY3Op330zun+MiOIP1k4L/00os1+Q/O/85C/gueGbwaXjIczrIT19ELqEAZ
        H5++dmy88Qt64cV58ps88nd5RvCv8NJg12XLyzvofVSGmPBa//rwlP80vfBijTunwtP++d8PU/7zD0Hn
        qeZccQO9l8oQsvbIfwZfenFW/qlD83+g5D/3sqB4Pbw0+AK9n4ptduhpvyNW5H/wFC7/ua8NxO8aHKGX
        VDFK/IIfvvTirPyNQwt/xKXf/BD8IMuyK+h9VUrMzokDHx3dM/kffPHFClOHF8/gond/SfDYyMmTl9N7
        q5SU+H1+eulFY/01/2lc8N54mN5bpYSMjk9/TD/k44PpQ/PPORC7n5cDR+j9VQZM/PFeevGTJz7yNxee
        x4Xu/wC8O5svfZneYWWbmZiYuHJsvPEaLkDKBPmnD89XT/6zR6B4sznXuZHeZWUbCa/9P4sLkDA7A9PN
        hT/jEg9+BJ6kd1nZRuKv9NISJMvq0/7qy79Gq935Gr3PSp8ZHZ/8aZlLPTre+Mvo7qn7d915/yfHxhr6
        rbJLZOLhh68Mj5o/pqUt9wAU/5w+duxaululj6y8mUcp8k++Hf7dOzIyou8Nb5E1+X9CC2tCXhyk+1X6
        yNh4440y5N+5e+pW+nOpQrIsu2o27zyOi2r2LKDzWpY9dA3ds9Jj1h65B30GsJf+PKqQfSdOvDc8Tf45
        Lak1zbliH9210mPKeM2vp/1bZ+2R/2e0nMN5FlA8R/et9JjBD8DkffTn4D1R/hQe+TeSZUu30L0rPWTg
        A7C78Qn6c/CcB44ff194XfxLWsjhPwvoHKO7V3rIoAdg5N579QWfS2RN/l/RMiLknWfp/t1ndE/jyOie
        yaPkxzDoASA/ds8JT/uvjj8dh4uIPQMo3tHfHeiSKP/Zp9HgEdABKD/xbbWD/E/TEuLkS7fRs3CZjfLT
        R0AHoNxE+cPT/l/j8nkg77ToebjLZvKTR0AHoLzokf+iA/AIPRNX6SY/dQR0AMpJ/CMaYeHt/2hHhWi1
        i1P0XNykF/mJI6ADMHgOHD36gSA/9r79bsmLF+nZuEg/8g/7COgADJYof3ik49+33yHx9wLo+eDZjvzD
        PAI6ANtPln3rg+GR3+dbd3sg77xFzwjNIPIP6wjoAGwvUf74GheXzDn0nLCUIf8wjoAOQP85uLj4ofDo
        VpW37tYBGHbKlN/6COgA9BfJrwPQNRbyWx4BHYDeE3+0NTztf4GWqkrQMxtqLOW3OgI6AL0lvOa/KTzy
        1+YNPHUASs4w5Lc4AjoAW6fV7nw1fkuLlqmK0LMbSoYpf9lHQAfgElle3jGbF5/Tj/bqAHQNIX+ZR0AH
        YOVXd98Tv7jXah+/efXRvvhOEP8lWp46QM/WNKT8kcmZ9tP0gIXoBu2oWSS/EFtDe2oSyS9Eb9Culh7J
        L0Tv0L6WGskvRH/QzpYWyS9E/9DelhLJL8T2oN0dOJJfiO1D+ztQJL8Qg0E7vO1IfiEGh/Z4W5H8QpQD
        7XLfkfxClAftc1+R/EKUC+10z5H8QpQP7XVPkfxC2EC7vWUkvxB20H5vmbHxxgHJL4QNtN89hTgCkl+k
        AO12zxnmEZD8IhVor/vKMI6A5BcpQTvddyyPgOQXqUH7vK1YHAHJL1KEdnnbKfMISH6RKrTHA6WMIyD5
        RcrQDg+cQY6A5BepQ/tbSrZzBCS/EDU5ADH9HAHJL8QqtLelppcjIPmFOAftbOnpdgQkvxDnQ/tqks2O
        gOQX4mJoV82y8QhIfiE2h/bUNPG9BCYPzD1DlyyEV2hHzUMXLIRnaD/NQxe8Ga28WL5nX2t5prmAfyzC
        lpnmous5036ahy74QqL8E3ubK1+b2HXX1MqC0B+TsGGmtbgy452B6cPz+MezGbSf5qEL3shG+dfREagn
        6/Kvz9nrEaD9NA9d8Dqbya8jUE8ulN/zEaD9NA9dcKSb/DoC9eJS8ns9ArSf5qELjty9v7v85x8Bv18w
        Et3ZSn6PR4D20zx0wf0shp4JVJeqzpj20zx0wVVfEFHv2dJ+mocuuC6LIuo5U9pP89AF121hRL1mSftp
        Hrrgui5O6tRlhrSf5qELrvsCpUidZkf7aR664FQWKRXqNjPaT/PQBae2UHWmjrOi/TQPXXCqi1U36joj
        2k/z0AWnvmB1oM6zof00D12wFq3a1H0mtJ/moQvWwlWXFGZB+2keumAtXjVJZQa0n+ahC9YCVo+Uuqf9
        NA9dsBaxWqTWOe2neeiCtZDVIcWuaT/NQxesxawGqXZM+2keumAtqH9S7pb20zx0wVpU36TeKe2neeiC
        tbB+UZc6AJVEi6sOy4L20zx0wVpgf6i7c9B+mocuWIvsC3V2PrSf5qEL1kL7QV1dDO2neeiCtdg+UEeb
        Q/tpHrpgjwsuJL8OQA3REShD/rT+NBvtp3nognUEqkFqj/w6ADVGR0Dy6wCshS5YR8A3KcuvA1Bz4hGg
        BfNOyvLrACQALZh36PnQ0H6ahy6YhhbMO/R8aGg/zUMXTEML5h16PjS0n+ahC6ahBfMOPR8a2k/z0AXT
        0IJ5h54PDe2neeiCaWjBvEPPh4b20zx0wTS0YN6h50ND+2keumAaWjDv0POhof00D10wDS2Yd+j50NB+
        mocumIYWzDv0fGhoP81DF0xDC+Ydej40tJ/moQumoQXzDj0fGtpP89AF09CCeYeeDw3tp3nogmlowbxD
        z4eG9tM8dME0tGDeoedDQ/tpHrpgGlow79DzoaH9NA9dMA0tmHfo+dDQfpqHLpiGFsw79HxoaD/NQxdM
        QwvmHXo+NLSf5qELpqEF8w49HxraT/PQBdPQgnmHng8N7ad56IJpaMG8Q8+HhvbTPHTBNLRg3qHnQ0P7
        aR66YBpaMO/Q86Gh/TQPXTANLZh36PnQ0H6ahy6YhhbMO/R8aGg/zUMXTEML5h16PjS0n+ahC6ahBfMO
        PR8a2k/z0AXT0IJ5h54PDe2neeiCaWjBvEPPh4b20zx0wTS0YN6h50ND+2keumAaWjDv0POhof00D10w
        DS2Yd+j50NB+mocumIYWzDv0fGhoP81DF0xDC+Ydej40tJ/moQumoQXzDj0fGtpP89AF09CCeYeeDw3t
        p3nogmlowbxDz4eG9tM8dME0tGDeoedDQ/tpHrpgGlow79DzoaH9NA9dMA0tmHfo+dDQfpqHLpiGFsw7
        9HxoaD/NQxdMQwvmHXo+NLSf5qELpqEF8w49HxraT/PQBdPQgnmHng8N7ad56IJpaMG8Q8+HhvbTPHTB
        NLRg3qHnQ0P7aR66YBpaMO/Q86Gh/TQPXTANLZh36PnQ0H6ahy6YhhbMO/R8aGg/zUMXTEML5h16PjS0
        n+ahC6ahBfMOPR8a2k/z0AXT0IJ5h54PDe2neeiCaWjBvEPPh4b20zx0wTS0YN6h50ND+2keumAaWjDv
        0POhof00D10wDS2Yd+j50NB+mocumIYWzDv0fGhoP81DF0xDC+Ydej40tJ/moQumoQXzDj0fGtpP89AF
        k8y0FnHBvDPTXMTnpANgGLpgUv5dd03hgnkndpTyEaD9NA9dsOT3T8pHgPbTPHTBkr8apHoEaD/NQxcs
        +avD6hFYwOeoA1Bi6IIlf7VI7ZkA7ad56IK9yZ/agquj7tB+mocuWIvtB3V1MbSf5qEL1kL7Qp2dD+2n
        eeiCtcj+UHfnoP00D12wFtgn6nAV2k/z0AVrcf2iLnUAKoUWVp2WDe2neeiCtaj+Sblb2k/z0AVrQatB
        qh3TfpqHLliLWR1S7Jr20zx0wVrIapFa57Sf5qEL1iJWj5S6p/00D12wFrCapDID2k/z0AVr8apLCrOg
        /TQPXbAWrtrUfSa0n+ahC9aiVZ86z4b20zx0wakvWF2o64xoP81DF5zqYtWROs6K9tM8dMGpLVTdqdvM
        aD/NQxecyiKlRJ1mR/tpHrrgui9QqtRlhrSf5qELruviiHrMkvbTPHTBdVsYUa+Z0n6ahy64Losi6jlb
        2k/z0AVXfUFEvWdM+2keuuDI3fubfSxGWn+aqk70egR2hv/P9OF5/OON0H6ahy440sqL5Ym9hyvzqCC2
        z1ZHwJP8EdpP89AFr9PtCEj+enGpI+BN/gjtp3nogjey2RGQ/PXkwiPgUf4I7ad56IIvZOMRkPz1Zv0I
        eJU/QvtpHrrgzYhH4J59LX3BLwHigfc8Z9pP89AFC+EZ2k/ztNrF23TJQrgk77xF+2meVrvzBl60EA4J
        brxG+2me2bx4iS5aCJfkxYu0n+YJn+gZvGghHBJeHp+i/TRPeJrzKF20EC7JO4/QfponXLkML1oIj+Sd
        Fu2necIzgNvxooVwSHhw/Artp3kOLix8OHyi79BlC+GJ6ESWFdfTfg4l4anO83ThQngiHIA/0V4OLbN5
        sUQXLoQnwkvjRdrLoSXLlj5NFy6EJ4ITt9BeDjXhKc8LdOlCuCDvPEv7OPSET3o/XrwQHsg7e2kfh54s
        y64On/irePlCkOSdf0cXaB+RhJcBTXwAQpDkxQztIZYsO3FduIAv40MQgiDv/CPLHrqG9hBNq730DXwQ
        QgB8Mz8+QvvnIq125yl6GEIMlbx4gvbOTbLs6EfimyHgQxFiCMQ3xWnOdW6kvXOVVvv458Nronfp4Qhh
        StjxVrv4Eu2by4RyjuADEsKQIP8s7ZnrhCPwbXpIQpiQd75H++U+IydPXj6bF4/hwxKiRMLr/h/F3ab9
        qkRiUeGp0nfpoQlRBmGXv59l2RW0V5XLytcE9IVBUVVWv+Cn1/yDpDm3dGv8eWl8mEL0Qfy2dvzOFu1P
        LdKcK26YzYsn6aEK0RN58UT82Rbam9olPBP4YuDv+ICF2Iy883J41N9Fe1LrTB87dm24sAfDa6tX8IEL
        0V75It8r8bf6kv/FnmEm/g51eGmwT28wKiiC+M/FN/NI9vf5vSS+n1qr3TkW31pJbzkurIi7Fd+9Nzza
        Hw1P9W+m917ZJPHvDszmS7fFv7ISjsIPw7+nw79/i7+AoT9NLrYi7sjqrsSdKU7FHYpvXBP/aEfcLXq/
        FUVRFEVRFEVRFEVRFEVRFEVRFEVRFEVJN/8HcQfKjyRVUT8AAAAASUVORK5CYII=
</value>
  </data>
</root>